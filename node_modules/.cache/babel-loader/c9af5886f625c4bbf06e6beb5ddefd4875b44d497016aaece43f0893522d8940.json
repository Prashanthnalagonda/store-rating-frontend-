{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91630\\\\store-rating-app\\\\frontend\\\\src\\\\pages\\\\PasswordUpdate.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { AuthContext } from '../contexts/AuthContext';\nimport { updatePassword } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PasswordUpdate = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [message, setMessage] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      await updatePassword(currentPassword, newPassword, user.token);\n      setMessage('Password updated successfully');\n      setCurrentPassword('');\n      setNewPassword('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(err);\n      setMessage(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Failed to update password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-6 border rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-semibold mb-4\",\n      children: \"Update Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mb-2 text-red-500\",\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Current Password\",\n        value: currentPassword,\n        onChange: e => setCurrentPassword(e.target.value),\n        className: \"border w-full mb-3 p-2\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"New Password\",\n        value: newPassword,\n        onChange: e => setNewPassword(e.target.value),\n        className: \"border w-full mb-3 p-2\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-600 text-white py-2 px-4 rounded\",\n        children: \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(PasswordUpdate, \"nDYikDNjL7s3Q4tPxmVgMXNaJwM=\");\n_c = PasswordUpdate;\nexport default PasswordUpdate;\nvar _c;\n$RefreshReg$(_c, \"PasswordUpdate\");","map":{"version":3,"names":["React","useState","useContext","AuthContext","updatePassword","jsxDEV","_jsxDEV","PasswordUpdate","_s","user","currentPassword","setCurrentPassword","newPassword","setNewPassword","message","setMessage","handleSubmit","e","preventDefault","token","err","_err$response","_err$response$data","console","error","response","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/91630/store-rating-app/frontend/src/pages/PasswordUpdate.jsx"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\nimport { updatePassword } from '../services/authService';\r\n\r\nconst PasswordUpdate = () => {\r\n  const { user } = useContext(AuthContext);\r\n  const [currentPassword, setCurrentPassword] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      await updatePassword(currentPassword, newPassword, user.token);\r\n      setMessage('Password updated successfully');\r\n      setCurrentPassword('');\r\n      setNewPassword('');\r\n    } catch (err) {\r\n      console.error(err);\r\n      setMessage(err.response?.data?.message || 'Failed to update password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 p-6 border rounded shadow\">\r\n      <h2 className=\"text-xl font-semibold mb-4\">Update Password</h2>\r\n      {message && <p className=\"mb-2 text-red-500\">{message}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Current Password\"\r\n          value={currentPassword}\r\n          onChange={(e) => setCurrentPassword(e.target.value)}\r\n          className=\"border w-full mb-3 p-2\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"New Password\"\r\n          value={newPassword}\r\n          onChange={(e) => setNewPassword(e.target.value)}\r\n          className=\"border w-full mb-3 p-2\"\r\n          required\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-600 text-white py-2 px-4 rounded\"\r\n        >\r\n          Update Password\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordUpdate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}