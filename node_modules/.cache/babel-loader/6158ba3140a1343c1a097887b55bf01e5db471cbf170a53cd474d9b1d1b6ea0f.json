{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91630\\\\store-rating-app\\\\frontend\\\\src\\\\pages\\\\Register.jsx\",\n  _s = $RefreshSig$();\n// src/pages/Register.jsx\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { registerUser } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Register = () => {\n  _s();\n  const navigate = useNavigate();\n  const [form, setForm] = useState({\n    name: '',\n    email: '',\n    address: '',\n    password: '',\n    role: 'user' // default role\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const validateForm = () => {\n    const {\n      name,\n      email,\n      address,\n      password\n    } = form;\n    if (name.length < 10 || name.length > 60) {\n      return 'Name must be between 20 and 60 characters.';\n    }\n    if (address.length > 400) {\n      return 'Address must not exceed 400 characters.';\n    }\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!emailRegex.test(email)) {\n      return 'Invalid email format.';\n    }\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,16}$/;\n    if (!passwordRegex.test(password)) {\n      return 'Password must be 8–16 characters and include at least one uppercase letter and one special character.';\n    }\n    return '';\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    const validationMessage = validateForm();\n    if (validationMessage) {\n      setError(validationMessage);\n      return;\n    }\n    try {\n      await registerUser(form);\n      navigate('/login');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errMsg = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.details) || 'Registration failed.';\n      setError(errMsg);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-6 bg-white rounded shadow\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-red-600 mb-2\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"space-y-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Full Name\",\n        value: form.name,\n        onChange: handleChange,\n        className: \"w-full p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: form.email,\n        onChange: handleChange,\n        className: \"w-full p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"address\",\n        placeholder: \"Address\",\n        value: form.address,\n        onChange: handleChange,\n        className: \"w-full p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: form.password,\n        onChange: handleChange,\n        className: \"w-full p-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"role\",\n        value: form.role,\n        onChange: handleChange,\n        className: \"w-full p-2 border rounded\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"user\",\n          children: \"Normal User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"admin\",\n          children: \"System Administrator\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"owner\",\n          children: \"Store Owner\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Register, \"dXdKM5zs2CPsIkXslUxDgPGHFaQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["React","useState","useNavigate","registerUser","jsxDEV","_jsxDEV","Register","_s","navigate","form","setForm","name","email","address","password","role","error","setError","handleChange","e","target","value","validateForm","length","emailRegex","test","passwordRegex","handleSubmit","preventDefault","validationMessage","err","_err$response","_err$response$data","errMsg","response","data","details","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","_c","$RefreshReg$"],"sources":["C:/Users/91630/store-rating-app/frontend/src/pages/Register.jsx"],"sourcesContent":["// src/pages/Register.jsx\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { registerUser } from '../services/authService';\r\n\r\nconst Register = () => {\r\n  const navigate = useNavigate();\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    email: '',\r\n    address: '',\r\n    password: '',\r\n    role: 'user', // default role\r\n  });\r\n\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const { name, email, address, password } = form;\r\n\r\n    if (name.length < 10 || name.length > 60) {\r\n      return 'Name must be between 20 and 60 characters.';\r\n    }\r\n\r\n    if (address.length > 400) {\r\n      return 'Address must not exceed 400 characters.';\r\n    }\r\n\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      return 'Invalid email format.';\r\n    }\r\n\r\n    const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*]).{8,16}$/;\r\n    if (!passwordRegex.test(password)) {\r\n      return 'Password must be 8–16 characters and include at least one uppercase letter and one special character.';\r\n    }\r\n\r\n    return '';\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n\r\n    const validationMessage = validateForm();\r\n    if (validationMessage) {\r\n      setError(validationMessage);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await registerUser(form);\r\n      navigate('/login');\r\n    } catch (err) {\r\n      const errMsg = err.response?.data?.details || 'Registration failed.';\r\n      setError(errMsg);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 p-6 bg-white rounded shadow\">\r\n      <h2 className=\"text-xl font-bold mb-4\">Register</h2>\r\n      {error && <div className=\"text-red-600 mb-2\">{error}</div>}\r\n      <form onSubmit={handleSubmit} className=\"space-y-4\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          placeholder=\"Full Name\"\r\n          value={form.name}\r\n          onChange={handleChange}\r\n          className=\"w-full p-2 border rounded\"\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={form.email}\r\n          onChange={handleChange}\r\n          className=\"w-full p-2 border rounded\"\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"address\"\r\n          placeholder=\"Address\"\r\n          value={form.address}\r\n          onChange={handleChange}\r\n          className=\"w-full p-2 border rounded\"\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={form.password}\r\n          onChange={handleChange}\r\n          className=\"w-full p-2 border rounded\"\r\n        />\r\n        <select\r\n          name=\"role\"\r\n          value={form.role}\r\n          onChange={handleChange}\r\n          className=\"w-full p-2 border rounded\"\r\n        >\r\n          <option value=\"user\">Normal User</option>\r\n          <option value=\"admin\">System Administrator</option>\r\n          <option value=\"owner\">Store Owner</option>\r\n        </select>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-blue-600 text-white py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          Register\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}