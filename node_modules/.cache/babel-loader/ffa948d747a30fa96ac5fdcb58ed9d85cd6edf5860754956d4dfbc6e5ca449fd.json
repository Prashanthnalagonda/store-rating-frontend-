{"ast":null,"code":"// src/components/ProtectedRoute.jsx\nimport React,{useContext}from'react';import{Navigate}from'react-router-dom';import{AuthContext}from'../contexts/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";const ProtectedRoute=_ref=>{let{children,allowedRoles}=_ref;const{user}=useContext(AuthContext);// Optional: show a loading message if user is still being set\nif(user===null){return/*#__PURE__*/_jsx(\"div\",{className:\"text-center mt-10 text-gray-600\",children:\"Loading...\"});}// Redirect to login if no user\nif(!user||!user.role){console.warn(\"üîí Redirecting: no user or role found in context\");return/*#__PURE__*/_jsx(Navigate,{to:\"/login\",replace:true});}// Role mismatch - Unauthorized access\nif(allowedRoles&&!allowedRoles.includes(user.role)){console.warn(`‚ùå Unauthorized for role \"${user.role}\" ‚Üí Allowed: ${allowedRoles}`);return/*#__PURE__*/_jsx(Navigate,{to:\"/unauthorized\",replace:true});}// Allowed\nreturn children;};export default ProtectedRoute;","map":{"version":3,"names":["React","useContext","Navigate","AuthContext","jsx","_jsx","ProtectedRoute","_ref","children","allowedRoles","user","className","role","console","warn","to","replace","includes"],"sources":["C:/Users/91630/store-rating-app/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["// src/components/ProtectedRoute.jsx\r\nimport React, { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AuthContext } from '../contexts/AuthContext';\r\n\r\nconst ProtectedRoute = ({ children, allowedRoles }) => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  // Optional: show a loading message if user is still being set\r\n  if (user === null) {\r\n    return <div className=\"text-center mt-10 text-gray-600\">Loading...</div>;\r\n  }\r\n\r\n  // Redirect to login if no user\r\n  if (!user || !user.role) {\r\n    console.warn(\"üîí Redirecting: no user or role found in context\");\r\n    return <Navigate to=\"/login\" replace />;\r\n  }\r\n\r\n  // Role mismatch - Unauthorized access\r\n  if (allowedRoles && !allowedRoles.includes(user.role)) {\r\n    console.warn(`‚ùå Unauthorized for role \"${user.role}\" ‚Üí Allowed: ${allowedRoles}`);\r\n    return <Navigate to=\"/unauthorized\" replace />;\r\n  }\r\n\r\n  // Allowed\r\n  return children;\r\n};\r\n\r\nexport default ProtectedRoute;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,UAAU,KAAQ,OAAO,CACzC,OAASC,QAAQ,KAAQ,kBAAkB,CAC3C,OAASC,WAAW,KAAQ,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEtD,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAAgC,IAA/B,CAAEC,QAAQ,CAAEC,YAAa,CAAC,CAAAF,IAAA,CAChD,KAAM,CAAEG,IAAK,CAAC,CAAGT,UAAU,CAACE,WAAW,CAAC,CAExC;AACA,GAAIO,IAAI,GAAK,IAAI,CAAE,CACjB,mBAAOL,IAAA,QAAKM,SAAS,CAAC,iCAAiC,CAAAH,QAAA,CAAC,YAAU,CAAK,CAAC,CAC1E,CAEA;AACA,GAAI,CAACE,IAAI,EAAI,CAACA,IAAI,CAACE,IAAI,CAAE,CACvBC,OAAO,CAACC,IAAI,CAAC,kDAAkD,CAAC,CAChE,mBAAOT,IAAA,CAACH,QAAQ,EAACa,EAAE,CAAC,QAAQ,CAACC,OAAO,MAAE,CAAC,CACzC,CAEA;AACA,GAAIP,YAAY,EAAI,CAACA,YAAY,CAACQ,QAAQ,CAACP,IAAI,CAACE,IAAI,CAAC,CAAE,CACrDC,OAAO,CAACC,IAAI,CAAC,4BAA4BJ,IAAI,CAACE,IAAI,gBAAgBH,YAAY,EAAE,CAAC,CACjF,mBAAOJ,IAAA,CAACH,QAAQ,EAACa,EAAE,CAAC,eAAe,CAACC,OAAO,MAAE,CAAC,CAChD,CAEA;AACA,MAAO,CAAAR,QAAQ,CACjB,CAAC,CAED,cAAe,CAAAF,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}