{"ast":null,"code":"// src/services/authService.js\nimport axios from 'axios';\nconst API = 'http://localhost:5000/api/auth';\n\n// ✅ Login\nexport const loginUser = async credentials => {\n  try {\n    const res = await axios.post(`${API}/login`, credentials);\n\n    // Save token & user to localStorage\n    localStorage.setItem('token', res.data.token);\n    localStorage.setItem('user', JSON.stringify(res.data.user));\n    return res.data;\n  } catch (err) {\n    var _err$response, _err$response$data;\n    // Optional: Forward specific error message\n    const message = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Login failed';\n    throw new Error(message);\n  }\n};\n\n// ✅ Register\nexport const registerUser = async userData => {\n  const res = await axios.post(`${API}/register`, userData);\n  return res.data;\n};\n\n// ✅ Get Current User from localStorage\nexport const getCurrentUser = () => {\n  const user = localStorage.getItem('user');\n  return user ? JSON.parse(user) : null;\n};\n\n// ✅ Logout\nexport const logoutUser = () => {\n  localStorage.removeItem('token');\n  localStorage.removeItem('user');\n};\n\n// ✅ Update Password (protected)\nexport const updatePassword = async (currentPassword, newPassword, token) => {\n  const res = await axios.put(`${API}/update-password`, {\n    currentPassword,\n    newPassword\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return res.data;\n};","map":{"version":3,"names":["axios","API","loginUser","credentials","res","post","localStorage","setItem","data","token","JSON","stringify","user","err","_err$response","_err$response$data","message","response","Error","registerUser","userData","getCurrentUser","getItem","parse","logoutUser","removeItem","updatePassword","currentPassword","newPassword","put","headers","Authorization"],"sources":["C:/Users/91630/store-rating-app/frontend/src/services/authService.js"],"sourcesContent":["// src/services/authService.js\r\nimport axios from 'axios';\r\n\r\nconst API = 'http://localhost:5000/api/auth';\r\n\r\n// ✅ Login\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const res = await axios.post(`${API}/login`, credentials);\r\n\r\n    // Save token & user to localStorage\r\n    localStorage.setItem('token', res.data.token);\r\n    localStorage.setItem('user', JSON.stringify(res.data.user));\r\n\r\n    return res.data;\r\n  } catch (err) {\r\n    // Optional: Forward specific error message\r\n    const message = err.response?.data?.message || 'Login failed';\r\n    throw new Error(message);\r\n  }\r\n};\r\n\r\n// ✅ Register\r\nexport const registerUser = async (userData) => {\r\n  const res = await axios.post(`${API}/register`, userData);\r\n  return res.data;\r\n};\r\n\r\n// ✅ Get Current User from localStorage\r\nexport const getCurrentUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\n// ✅ Logout\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n};\r\n\r\n// ✅ Update Password (protected)\r\nexport const updatePassword = async (currentPassword, newPassword, token) => {\r\n  const res = await axios.put(\r\n    `${API}/update-password`,\r\n    { currentPassword, newPassword },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n  return res.data;\r\n};\r\n"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,GAAG,GAAG,gCAAgC;;AAE5C;AACA,OAAO,MAAMC,SAAS,GAAG,MAAOC,WAAW,IAAK;EAC9C,IAAI;IACF,MAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,GAAG,QAAQ,EAAEE,WAAW,CAAC;;IAEzD;IACAG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,GAAG,CAACI,IAAI,CAACC,KAAK,CAAC;IAC7CH,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEG,IAAI,CAACC,SAAS,CAACP,GAAG,CAACI,IAAI,CAACI,IAAI,CAAC,CAAC;IAE3D,OAAOR,GAAG,CAACI,IAAI;EACjB,CAAC,CAAC,OAAOK,GAAG,EAAE;IAAA,IAAAC,aAAA,EAAAC,kBAAA;IACZ;IACA,MAAMC,OAAO,GAAG,EAAAF,aAAA,GAAAD,GAAG,CAACI,QAAQ,cAAAH,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAcN,IAAI,cAAAO,kBAAA,uBAAlBA,kBAAA,CAAoBC,OAAO,KAAI,cAAc;IAC7D,MAAM,IAAIE,KAAK,CAACF,OAAO,CAAC;EAC1B;AACF,CAAC;;AAED;AACA,OAAO,MAAMG,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,MAAMhB,GAAG,GAAG,MAAMJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,GAAG,WAAW,EAAEmB,QAAQ,CAAC;EACzD,OAAOhB,GAAG,CAACI,IAAI;AACjB,CAAC;;AAED;AACA,OAAO,MAAMa,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMT,IAAI,GAAGN,YAAY,CAACgB,OAAO,CAAC,MAAM,CAAC;EACzC,OAAOV,IAAI,GAAGF,IAAI,CAACa,KAAK,CAACX,IAAI,CAAC,GAAG,IAAI;AACvC,CAAC;;AAED;AACA,OAAO,MAAMY,UAAU,GAAGA,CAAA,KAAM;EAC9BlB,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC;EAChCnB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAOC,eAAe,EAAEC,WAAW,EAAEnB,KAAK,KAAK;EAC3E,MAAML,GAAG,GAAG,MAAMJ,KAAK,CAAC6B,GAAG,CACzB,GAAG5B,GAAG,kBAAkB,EACxB;IAAE0B,eAAe;IAAEC;EAAY,CAAC,EAChC;IACEE,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUtB,KAAK;IAChC;EACF,CACF,CAAC;EACD,OAAOL,GAAG,CAACI,IAAI;AACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}