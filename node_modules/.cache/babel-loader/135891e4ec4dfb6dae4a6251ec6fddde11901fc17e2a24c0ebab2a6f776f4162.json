{"ast":null,"code":"// src/services/authService.js\nimport axios from'axios';const API='http://localhost:5000/api/auth';// ✅ Login\nexport const loginUser=async credentials=>{try{const res=await axios.post(`${API}/login`,credentials);// Save token & user to localStorage\nlocalStorage.setItem('token',res.data.token);localStorage.setItem('user',JSON.stringify(res.data.user));return res.data;}catch(err){var _err$response,_err$response$data;// Optional: Forward specific error message\nconst message=((_err$response=err.response)===null||_err$response===void 0?void 0:(_err$response$data=_err$response.data)===null||_err$response$data===void 0?void 0:_err$response$data.message)||'Login failed';throw new Error(message);}};// ✅ Register\nexport const registerUser=async userData=>{const res=await axios.post(`${API}/register`,userData);return res.data;};// ✅ Get Current User from localStorage\nexport const getCurrentUser=()=>{const user=localStorage.getItem('user');return user?JSON.parse(user):null;};// ✅ Logout\nexport const logoutUser=()=>{localStorage.removeItem('token');localStorage.removeItem('user');};// ✅ Update Password (protected)\nexport const updatePassword=async(currentPassword,newPassword,token)=>{const res=await axios.put(`${API}/update-password`,{currentPassword,newPassword},{headers:{Authorization:`Bearer ${token}`}});return res.data;};","map":{"version":3,"names":["axios","API","loginUser","credentials","res","post","localStorage","setItem","data","token","JSON","stringify","user","err","_err$response","_err$response$data","message","response","Error","registerUser","userData","getCurrentUser","getItem","parse","logoutUser","removeItem","updatePassword","currentPassword","newPassword","put","headers","Authorization"],"sources":["C:/Users/91630/store-rating-app/frontend/src/services/authService.js"],"sourcesContent":["// src/services/authService.js\r\nimport axios from 'axios';\r\n\r\nconst API = 'http://localhost:5000/api/auth';\r\n\r\n// ✅ Login\r\nexport const loginUser = async (credentials) => {\r\n  try {\r\n    const res = await axios.post(`${API}/login`, credentials);\r\n\r\n    // Save token & user to localStorage\r\n    localStorage.setItem('token', res.data.token);\r\n    localStorage.setItem('user', JSON.stringify(res.data.user));\r\n\r\n    return res.data;\r\n  } catch (err) {\r\n    // Optional: Forward specific error message\r\n    const message = err.response?.data?.message || 'Login failed';\r\n    throw new Error(message);\r\n  }\r\n};\r\n\r\n// ✅ Register\r\nexport const registerUser = async (userData) => {\r\n  const res = await axios.post(`${API}/register`, userData);\r\n  return res.data;\r\n};\r\n\r\n// ✅ Get Current User from localStorage\r\nexport const getCurrentUser = () => {\r\n  const user = localStorage.getItem('user');\r\n  return user ? JSON.parse(user) : null;\r\n};\r\n\r\n// ✅ Logout\r\nexport const logoutUser = () => {\r\n  localStorage.removeItem('token');\r\n  localStorage.removeItem('user');\r\n};\r\n\r\n// ✅ Update Password (protected)\r\nexport const updatePassword = async (currentPassword, newPassword, token) => {\r\n  const res = await axios.put(\r\n    `${API}/update-password`,\r\n    { currentPassword, newPassword },\r\n    {\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n      },\r\n    }\r\n  );\r\n  return res.data;\r\n};\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB,KAAM,CAAAC,GAAG,CAAG,gCAAgC,CAE5C;AACA,MAAO,MAAM,CAAAC,SAAS,CAAG,KAAO,CAAAC,WAAW,EAAK,CAC9C,GAAI,CACF,KAAM,CAAAC,GAAG,CAAG,KAAM,CAAAJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,GAAG,QAAQ,CAAEE,WAAW,CAAC,CAEzD;AACAG,YAAY,CAACC,OAAO,CAAC,OAAO,CAAEH,GAAG,CAACI,IAAI,CAACC,KAAK,CAAC,CAC7CH,YAAY,CAACC,OAAO,CAAC,MAAM,CAAEG,IAAI,CAACC,SAAS,CAACP,GAAG,CAACI,IAAI,CAACI,IAAI,CAAC,CAAC,CAE3D,MAAO,CAAAR,GAAG,CAACI,IAAI,CACjB,CAAE,MAAOK,GAAG,CAAE,KAAAC,aAAA,CAAAC,kBAAA,CACZ;AACA,KAAM,CAAAC,OAAO,CAAG,EAAAF,aAAA,CAAAD,GAAG,CAACI,QAAQ,UAAAH,aAAA,kBAAAC,kBAAA,CAAZD,aAAA,CAAcN,IAAI,UAAAO,kBAAA,iBAAlBA,kBAAA,CAAoBC,OAAO,GAAI,cAAc,CAC7D,KAAM,IAAI,CAAAE,KAAK,CAACF,OAAO,CAAC,CAC1B,CACF,CAAC,CAED;AACA,MAAO,MAAM,CAAAG,YAAY,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC9C,KAAM,CAAAhB,GAAG,CAAG,KAAM,CAAAJ,KAAK,CAACK,IAAI,CAAC,GAAGJ,GAAG,WAAW,CAAEmB,QAAQ,CAAC,CACzD,MAAO,CAAAhB,GAAG,CAACI,IAAI,CACjB,CAAC,CAED;AACA,MAAO,MAAM,CAAAa,cAAc,CAAGA,CAAA,GAAM,CAClC,KAAM,CAAAT,IAAI,CAAGN,YAAY,CAACgB,OAAO,CAAC,MAAM,CAAC,CACzC,MAAO,CAAAV,IAAI,CAAGF,IAAI,CAACa,KAAK,CAACX,IAAI,CAAC,CAAG,IAAI,CACvC,CAAC,CAED;AACA,MAAO,MAAM,CAAAY,UAAU,CAAGA,CAAA,GAAM,CAC9BlB,YAAY,CAACmB,UAAU,CAAC,OAAO,CAAC,CAChCnB,YAAY,CAACmB,UAAU,CAAC,MAAM,CAAC,CACjC,CAAC,CAED;AACA,MAAO,MAAM,CAAAC,cAAc,CAAG,KAAAA,CAAOC,eAAe,CAAEC,WAAW,CAAEnB,KAAK,GAAK,CAC3E,KAAM,CAAAL,GAAG,CAAG,KAAM,CAAAJ,KAAK,CAAC6B,GAAG,CACzB,GAAG5B,GAAG,kBAAkB,CACxB,CAAE0B,eAAe,CAAEC,WAAY,CAAC,CAChC,CACEE,OAAO,CAAE,CACPC,aAAa,CAAE,UAAUtB,KAAK,EAChC,CACF,CACF,CAAC,CACD,MAAO,CAAAL,GAAG,CAACI,IAAI,CACjB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}